{
    "messages": [
        { "role": "system", "content": "
You are an assistant that is an expert in generating sqlite SQL queries.
Having the access to database content, generate a correct sqlite SQL query for the given question.
### Database content ###

CREATE TABLE head (
	"head_ID" INTEGER, 
	name TEXT, 
	born_state TEXT, 
	age REAL, 
	PRIMARY KEY ("head_ID")
)
/*
Columns in head and all categories for low cardinality columns :
head_ID : 1, 2, 5, 7, 8, 4, 6, 3, 10, 9
name : Jeff Maggert, Pádraig Harrington, Billy Mayfair, K. J. Choi, Dudley Hart, Sergio García, Stewart Cink, Tiger Woods, Nick Faldo, Franklin Langham
born_state : Delaware, Connecticut, Alabama, California, Florida
age : 69.0, 67.0, 68.0, 53.0, 56.0, 52.0, 50.0, 43.0
*/
 
CREATE TABLE "Instruments" (
	"SongId" INTEGER, 
	"BandmateId" INTEGER, 
	"Instrument" TEXT, 
	PRIMARY KEY ("SongId", "BandmateId", "Instrument"), 
	FOREIGN KEY("SongId") REFERENCES "Songs" ("SongId"), 
	FOREIGN KEY("BandmateId") REFERENCES "Band" ("Id")
)
/*
Columns in Instruments and all categories for low cardinality columns :
SongId : 
BandmateId : 
Instrument : 
*/
 
CREATE TABLE "Apartments" (
	apt_id INTEGER NOT NULL, 
	building_id INTEGER NOT NULL, 
	apt_type_code CHAR(15), 
	apt_number CHAR(10), 
	bathroom_count INTEGER, 
	bedroom_count INTEGER, 
	room_count CHAR(5), 
	PRIMARY KEY (apt_id), 
	FOREIGN KEY(building_id) REFERENCES "Apartment_Buildings" (building_id), 
	UNIQUE (apt_id)
)
/*
Columns in Apartments and 3 examples in each column for high cardinality columns :
apt_id : 1, 13, 11
apt_number : Suite 307, Apt. 411, Apt. 585
*/
/*
Columns in Apartments and all categories for low cardinality columns :
building_id : 153, 673, 808, 744, 624, 790, 191, 734, 225
apt_type_code : Studio, Flat, Duplex
bathroom_count : 1, 2, 3
bedroom_count : 5, 4, 6, 3
room_count : 5, 7, 8, 6, 3, 9
*/
 
CREATE TABLE "Guests" (
	guest_id INTEGER NOT NULL, 
	gender_code CHAR(1), 
	guest_first_name VARCHAR(80), 
	guest_last_name VARCHAR(80), 
	date_of_birth DATETIME, 
	PRIMARY KEY (guest_id), 
	UNIQUE (guest_id)
)
/*
Columns in Guests and 3 examples in each column for high cardinality columns :
guest_id : 1, 13, 11
guest_first_name : Louvenia, Lou, Keith
guest_last_name : Bode, Mante, Schowalter
date_of_birth : 2001-06-18 20:05:55, 1980-06-20 18:15:39, 1997-01-15 17:37:40
*/
/*
Columns in Guests and all categories for low cardinality columns :
gender_code : Male, Unknown, Female
*/
 
CREATE TABLE school_details (
	"School_ID" INTEGER, 
	"Nickname" TEXT, 
	"Colors" TEXT, 
	"League" TEXT, 
	"Class" TEXT, 
	"Division" TEXT, 
	PRIMARY KEY ("School_ID"), 
	FOREIGN KEY("School_ID") REFERENCES school ("School_ID")
)
/*
Columns in school_details and all categories for low cardinality columns :
School_ID : 1, 2, 5, 4, 6, 3
Nickname : Auks, Raiders, Silver Eagles, Seahawks, Buccaneers, Tigers
Colors : Dark Green and White, Blue and Yellow, Maroon and White, Blue and Gold, Garnet and White, Silver and Maroon
League : DSHA
Class : Flight B, Flight A, Fight A
Division : Division 1, Division 2, Division 3
*/
 
CREATE TABLE people (
	"People_ID" INTEGER, 
	"Sex" TEXT, 
	"Name" TEXT, 
	"Date_of_Birth" TEXT, 
	"Height" REAL, 
	"Weight" REAL, 
	PRIMARY KEY ("People_ID")
)
/*
Columns in people and all categories for low cardinality columns :
People_ID : 1, 2, 5, 7, 8, 4, 6, 3, 9
Sex : F, M
Name : Vincent Montméat, Frantz Granvorka, Loïc De Kergret, Philippe Barça-Cysique, Guillaume Samica, Stéphane Antiga, Dominique Daquin, Laurent Capet, Hubert Henno
Date_of_Birth : 20.08.1970, 10.03.1976, 05.05.1972, 28.09.1981, 22.04.1977, 01.09.1977, 10.11.1972, 06.10.1976, 03.02.1976
Height : 196.0, 195.0, 197.0, 188.0, 193.0, 200.0, 202.0, 194.0
Weight : 89.0, 82.0, 85.0, 88.0, 90.0, 92.0, 83.0, 94.0
*/
 
CREATE TABLE "Products" (
	product_id INTEGER, 
	color_code VARCHAR(15) NOT NULL, 
	product_category_code VARCHAR(15) NOT NULL, 
	product_name VARCHAR(80), 
	typical_buying_price VARCHAR(20), 
	typical_selling_price VARCHAR(20), 
	product_description VARCHAR(255), 
	other_product_details VARCHAR(255), 
	PRIMARY KEY (product_id), 
	FOREIGN KEY(color_code) REFERENCES "Ref_Colors" (color_code), 
	FOREIGN KEY(product_category_code) REFERENCES "Ref_Product_Categories" (product_category_code)
)
/*
Columns in Products and 3 examples in each column for high cardinality columns :
product_id : 1, 13, 11
product_name : peper, cumin, chili
typical_buying_price : , 5.578, 503.8431967
typical_selling_price : , 149, 10377614.847385
product_description : ut, et, vel
*/
/*
Columns in Products and all categories for low cardinality columns :
color_code : 1, 2, 5, 7, 4, 9
product_category_code : Spices, Seeds, Herbs
other_product_details : None
*/
 
CREATE TABLE pilot (
	"Pilot_ID" INTEGER, 
	"Pilot_name" TEXT, 
	"Rank" INTEGER, 
	"Age" INTEGER, 
	"Nationality" TEXT, 
	"Position" TEXT, 
	"Join_Year" INTEGER, 
	"Team" TEXT, 
	PRIMARY KEY ("Pilot_ID")
)
/*
Columns in pilot and all categories for low cardinality columns :
Pilot_ID : 1, 2, 5, 4, 3
Pilot_name : Patrick O'Bryant, Charles Oakley, Dan O'Sullivan, Hakeem Olajuwon, Jermaine O'Neal
Rank : 34, 13, 45, 6
Age : 37, 33, 40, 32, 22
Nationality : United States, Nigeria, United Kindom
Position : Center Team, Forward Team, Forward-Center Team
Join_Year : 2009, 2001, 2008, 1999, 2010
Team : Fordham, Eau Claire High School, Bradley, Virginia Union, Houston
*/
 
CREATE TABLE "Type_Of_Restaurant" (
	"ResID" INTEGER, 
	"ResTypeID" INTEGER, 
	FOREIGN KEY("ResID") REFERENCES "Restaurant" ("ResID"), 
	FOREIGN KEY("ResTypeID") REFERENCES "Restaurant_Type" ("ResTypeID")
)
/*
Columns in Type_Of_Restaurant and all categories for low cardinality columns :
ResID : 1, 2
ResTypeID : 1, 2
*/
" }, { "role": "user", "content": "List the name, born state and age of the heads of departments ordered by age." }, { "role": "assistant", "content": "
To construct the query, I'll be working with the following tables: head.
From these tables, I'll be using the following columns: name, born_state, age.
The SQL query I'll be generating is:
SELECT name , born_state , age FROM head ORDER BY age" },
        {
            "role": "user",
            "content": "How many heads of the departments are older than 56 ?"
        },
        {
            "role": "assistant",
            "content": "\nTo construct the query, I'll be working with the following tables: head.\nFrom these tables, I'll be using the following columns: age.\nThe SQL query I'll be generating is:\nSELECT count(*) FROM head WHERE age  >  56"
        }
    ]
}{
    "messages": [
        {
            "role": "system",
            "content": "\nYou are an assistant that is an expert in generating sqlite SQL queries.\nHaving the access to database content, generate a correct sqlite SQL query for the given question.\n### Database content ###\n        \nCREATE TABLE management (\n\t\"department_ID\" INTEGER, \n\t\"head_ID\" INTEGER, \n\ttemporary_acting TEXT, \n\tPRIMARY KEY (\"department_ID\", \"head_ID\"), \n\tFOREIGN KEY(\"head_ID\") REFERENCES head (\"head_ID\"), \n\tFOREIGN KEY(\"department_ID\") REFERENCES department (\"Department_ID\")\n)\n/*\nColumns in management and all categories for low cardinality columns :\ndepartment_ID : 7, 15, 2, 11\nhead_ID : 5, 4, 6, 3, 10\ntemporary_acting : Yes, No\n*/\n \nCREATE TABLE \"Documents_with_Expenses\" (\n\t\"Document_ID\" INTEGER NOT NULL, \n\t\"Budget_Type_Code\" CHAR(15) NOT NULL, \n\t\"Document_Details\" VARCHAR(255), \n\tPRIMARY KEY (\"Document_ID\"), \n\tFOREIGN KEY(\"Budget_Type_Code\") REFERENCES \"Ref_Budget_Codes\" (\"Budget_Type_Code\"), \n\tFOREIGN KEY(\"Document_ID\") REFERENCES \"Documents\" (\"Document_ID\")\n)\n/*\nColumns in Documents_with_Expenses and all categories for low cardinality columns :\nDocument_ID : 300, 240, 309, 226, 367, 371, 383, 227, 192, 57\nBudget_Type_Code : GV, SF, ORG\nDocument_Details : government, safety, organization\n*/\n \nCREATE TABLE head (\n\t\"head_ID\" INTEGER, \n\tname TEXT, \n\tborn_state TEXT, \n\tage REAL, \n\tPRIMARY KEY (\"head_ID\")\n)\n/*\nColumns in head and all categories for low cardinality columns :\nhead_ID : 1, 2, 5, 7, 8, 4, 6, 3, 10, 9\nname : Jeff Maggert, P\u00e1draig Harrington, Billy Mayfair, K. J. Choi, Dudley Hart, Sergio Garc\u00eda, Stewart Cink, Tiger Woods, Nick Faldo, Franklin Langham\nborn_state : Delaware, Connecticut, Alabama, California, Florida\nage : 69.0, 67.0, 68.0, 53.0, 56.0, 52.0, 50.0, 43.0\n*/\n \nCREATE TABLE department (\n\t\"Department_ID\" INTEGER, \n\t\"Name\" TEXT, \n\t\"Creation\" TEXT, \n\t\"Ranking\" INTEGER, \n\t\"Budget_in_Billions\" REAL, \n\t\"Num_Employees\" REAL, \n\tPRIMARY KEY (\"Department_ID\")\n)\n/*\nColumns in department and 3 examples in each column for high cardinality columns :\nDepartment_ID : 1, 13, 11\nName : Energy, Interior, Health and Human Services\nCreation : 1913, 1979, 1989\nRanking : 1, 13, 11\nBudget_in_Billions : 10.7, 77.6, 59.7\nNum_Employees : 112557.0, 3000000.0, 235000.0\n*/\n\n \nCREATE TABLE \"Customers\" (\n\tcustomer_id INTEGER, \n\tcustomer_address_id INTEGER NOT NULL, \n\tcustomer_status_code VARCHAR(15) NOT NULL, \n\tdate_became_customer DATETIME, \n\tdate_of_birth DATETIME, \n\tfirst_name VARCHAR(80), \n\tlast_name VARCHAR(80), \n\tamount_outstanding DOUBLE, \n\temail_address VARCHAR(250), \n\tphone_number VARCHAR(255), \n\tcell_mobile_phone_number VARCHAR(255), \n\tPRIMARY KEY (customer_id), \n\tFOREIGN KEY(customer_address_id) REFERENCES \"Addresses\" (address_id)\n)\n/*\nColumns in Customers and 3 examples in each column for high cardinality columns :\ncustomer_id : 1, 13, 11\ndate_became_customer : 2016-03-18 06:14:18, 2016-05-13 07:38:23, 2017-10-05 14:15:46\ndate_of_birth : 1994-05-07 01:32:16, 1991-12-05 02:50:15, 1998-09-18 04:45:01\nfirst_name : Millie, Dianna, Carole\nlast_name : Schmeler, Tromp, Goodwin\namount_outstanding : 7093.0, 8144.0, 9447.0\nemail_address : mariela28@example.org, wehner.harold@example.com, afranecki@example.com\nphone_number : 1-618-535-9750, 218.550.1362, 753.921.0871\ncell_mobile_phone_number : 578-518-4785x612, (780)719-4206x033, (630)964-2426\n*/\n/*\nColumns in Customers and all categories for low cardinality columns :\ncustomer_address_id : 1, 13, 2, 7, 8, 12, 10, 9\ncustomer_status_code : Bad Customer, Good Customer\n*/\n \nCREATE TABLE \"Instruments\" (\n\t\"SongId\" INTEGER, \n\t\"BandmateId\" INTEGER, \n\t\"Instrument\" TEXT, \n\tPRIMARY KEY (\"SongId\", \"BandmateId\", \"Instrument\"), \n\tFOREIGN KEY(\"SongId\") REFERENCES \"Songs\" (\"SongId\"), \n\tFOREIGN KEY(\"BandmateId\") REFERENCES \"Band\" (\"Id\")\n)\n/*\nColumns in Instruments and all categories for low cardinality columns :\nSongId : \nBandmateId : \nInstrument : \n*/\n \nCREATE TABLE \"Apartments\" (\n\tapt_id INTEGER NOT NULL, \n\tbuilding_id INTEGER NOT NULL, \n\tapt_type_code CHAR(15), \n\tapt_number CHAR(10), \n\tbathroom_count INTEGER, \n\tbedroom_count INTEGER, \n\troom_count CHAR(5), \n\tPRIMARY KEY (apt_id), \n\tFOREIGN KEY(building_id) REFERENCES \"Apartment_Buildings\" (building_id), \n\tUNIQUE (apt_id)\n)\n/*\nColumns in Apartments and 3 examples in each column for high cardinality columns :\napt_id : 1, 13, 11\napt_number : Suite 307, Apt. 411, Apt. 585\n*/\n/*\nColumns in Apartments and all categories for low cardinality columns :\nbuilding_id : 153, 673, 808, 744, 624, 790, 191, 734, 225\napt_type_code : Studio, Flat, Duplex\nbathroom_count : 1, 2, 3\nbedroom_count : 5, 4, 6, 3\nroom_count : 5, 7, 8, 6, 3, 9\n*/\n \nCREATE TABLE \"Customers\" (\n\tcustomer_id INTEGER, \n\tcustomer_first_name VARCHAR(20), \n\tcustomer_last_name VARCHAR(20), \n\tcustomer_address VARCHAR(255), \n\tcustomer_phone VARCHAR(255), \n\tcustomer_email VARCHAR(255), \n\tother_customer_details VARCHAR(255), \n\tPRIMARY KEY (customer_id)\n)\n/*\nColumns in Customers and 3 examples in each column for high cardinality columns :\ncustomer_id : 1, 13, 11\ncustomer_first_name : Armani, Bryce, Nat\ncustomer_last_name : Swift, Lind, Huels\ncustomer_address : 6478 Moen Isle Suite 910\nSchimmelmouth, VT 96364-4898, 47286 Mraz Park Apt. 424\nJocelynfurt, OH 59023-2787, 094 Julianne Mill\nWebstertown, KY 91980-4004\ncustomer_phone : (415)237-0701x3115, 679-845-8645x94312, 284.749.0453\ncustomer_email : kyra.murazik@example.org, schaden.katrina@example.net, huels.antonina@example.com\n*/\n/*\nColumns in Customers and all categories for low cardinality columns :\nother_customer_details : None\n*/\n \nCREATE TABLE \"Guests\" (\n\tguest_id INTEGER NOT NULL, \n\tgender_code CHAR(1), \n\tguest_first_name VARCHAR(80), \n\tguest_last_name VARCHAR(80), \n\tdate_of_birth DATETIME, \n\tPRIMARY KEY (guest_id), \n\tUNIQUE (guest_id)\n)\n/*\nColumns in Guests and 3 examples in each column for high cardinality columns :\nguest_id : 1, 13, 11\nguest_first_name : Louvenia, Lou, Keith\nguest_last_name : Bode, Mante, Schowalter\ndate_of_birth : 2001-06-18 20:05:55, 1980-06-20 18:15:39, 1997-01-15 17:37:40\n*/\n/*\nColumns in Guests and all categories for low cardinality columns :\ngender_code : Male, Unknown, Female\n*/\n \nCREATE TABLE school_details (\n\t\"School_ID\" INTEGER, \n\t\"Nickname\" TEXT, \n\t\"Colors\" TEXT, \n\t\"League\" TEXT, \n\t\"Class\" TEXT, \n\t\"Division\" TEXT, \n\tPRIMARY KEY (\"School_ID\"), \n\tFOREIGN KEY(\"School_ID\") REFERENCES school (\"School_ID\")\n)\n/*\nColumns in school_details and all categories for low cardinality columns :\nSchool_ID : 1, 2, 5, 4, 6, 3\nNickname : Auks, Raiders, Silver Eagles, Seahawks, Buccaneers, Tigers\nColors : Dark Green and White, Blue and Yellow, Maroon and White, Blue and Gold, Garnet and White, Silver and Maroon\nLeague : DSHA\nClass : Flight B, Flight A, Fight A\nDivision : Division 1, Division 2, Division 3\n*/\n \nCREATE TABLE people (\n\t\"People_ID\" INTEGER, \n\t\"Sex\" TEXT, \n\t\"Name\" TEXT, \n\t\"Date_of_Birth\" TEXT, \n\t\"Height\" REAL, \n\t\"Weight\" REAL, \n\tPRIMARY KEY (\"People_ID\")\n)\n/*\nColumns in people and all categories for low cardinality columns :\nPeople_ID : 1, 2, 5, 7, 8, 4, 6, 3, 9\nSex : F, M\nName : Vincent Montm\u00e9at, Frantz Granvorka, Lo\u00efc De Kergret, Philippe Bar\u00e7a-Cysique, Guillaume Samica, St\u00e9phane Antiga, Dominique Daquin, Laurent Capet, Hubert Henno\nDate_of_Birth : 20.08.1970, 10.03.1976, 05.05.1972, 28.09.1981, 22.04.1977, 01.09.1977, 10.11.1972, 06.10.1976, 03.02.1976\nHeight : 196.0, 195.0, 197.0, 188.0, 193.0, 200.0, 202.0, 194.0\nWeight : 89.0, 82.0, 85.0, 88.0, 90.0, 92.0, 83.0, 94.0\n*/\n \nCREATE TABLE protein (\n\tcommon_name TEXT, \n\tprotein_name TEXT, \n\tdivergence_from_human_lineage REAL, \n\taccession_number TEXT, \n\tsequence_length REAL, \n\tsequence_identity_to_human_protein TEXT, \n\t\"Institution_id\" TEXT, \n\tPRIMARY KEY (common_name), \n\tFOREIGN KEY(\"Institution_id\") REFERENCES \"Institution\" (\"Institution_id\")\n)\n/*\nColumns in protein and all categories for low cardinality columns :\ncommon_name : Tropical Clawed Frog, porkworm, body louse, southern house mosquito, purple sea urchin\nprotein_name : uncharacterized protein LOC578090, conserved hypothetical protein, Centromeric protein E, putative, surface antigen repeat family protein, uncharacterized protein C20orf117-like\ndivergence_from_human_lineage : 937.5, 742.9, 782.7, 371.2\naccession_number : XP_003380263.1, XP_002942331.1, XP_783370.2, XP_002429877.1, XP_001843754.1\nsequence_length : 2030.0, 1587.0, 2086.0, 1584.0, 1878.0\nsequence_identity_to_human_protein : 30%, 47%, 36%, 39%, 32%\nInstitution_id : 1, 5, 9, 3\n*/\n \nCREATE TABLE \"Products\" (\n\tproduct_id INTEGER, \n\tcolor_code VARCHAR(15) NOT NULL, \n\tproduct_category_code VARCHAR(15) NOT NULL, \n\tproduct_name VARCHAR(80), \n\ttypical_buying_price VARCHAR(20), \n\ttypical_selling_price VARCHAR(20), \n\tproduct_description VARCHAR(255), \n\tother_product_details VARCHAR(255), \n\tPRIMARY KEY (product_id), \n\tFOREIGN KEY(color_code) REFERENCES \"Ref_Colors\" (color_code), \n\tFOREIGN KEY(product_category_code) REFERENCES \"Ref_Product_Categories\" (product_category_code)\n)\n/*\nColumns in Products and 3 examples in each column for high cardinality columns :\nproduct_id : 1, 13, 11\nproduct_name : peper, cumin, chili\ntypical_buying_price : , 5.578, 503.8431967\ntypical_selling_price : , 149, 10377614.847385\nproduct_description : ut, et, vel\n*/\n/*\nColumns in Products and all categories for low cardinality columns :\ncolor_code : 1, 2, 5, 7, 4, 9\nproduct_category_code : Spices, Seeds, Herbs\nother_product_details : None\n*/\n \nCREATE TABLE film_text (\n\tfilm_id SMALLINT NOT NULL, \n\ttitle VARCHAR(255) NOT NULL, \n\tdescription TEXT, \n\tPRIMARY KEY (film_id)\n)\n/*\nColumns in film_text and all categories for low cardinality columns :\nfilm_id : \ntitle : \ndescription : \n*/\n \nCREATE TABLE \"Student\" (\n\t\"StuID\" INTEGER, \n\t\"LName\" VARCHAR(12), \n\t\"Fname\" VARCHAR(12), \n\t\"Age\" INTEGER, \n\t\"Sex\" VARCHAR(1), \n\t\"Major\" INTEGER, \n\t\"Advisor\" INTEGER, \n\tcity_code VARCHAR(3), \n\tPRIMARY KEY (\"StuID\")\n)\n/*\nColumns in Student and 3 examples in each column for high cardinality columns :\nStuID : 1003, 1017, 1002\nLName : Lee, Han, Brody\nFname : Tracy, Michael, Shiela\nAdvisor : 7723, 7712, 7134\ncity_code : ATL, HOU, LON\n*/\n/*\nColumns in Student and all categories for low cardinality columns :\nAge : 26, 16, 20, 17, 21, 19, 18, 27, 22\nSex : F, M\nMajor : 520, 100, 50, 600, 540, 550\n*/\n \nCREATE TABLE pilot (\n\t\"Pilot_ID\" INTEGER, \n\t\"Pilot_name\" TEXT, \n\t\"Rank\" INTEGER, \n\t\"Age\" INTEGER, \n\t\"Nationality\" TEXT, \n\t\"Position\" TEXT, \n\t\"Join_Year\" INTEGER, \n\t\"Team\" TEXT, \n\tPRIMARY KEY (\"Pilot_ID\")\n)\n/*\nColumns in pilot and all categories for low cardinality columns :\nPilot_ID : 1, 2, 5, 4, 3\nPilot_name : Patrick O'Bryant, Charles Oakley, Dan O'Sullivan, Hakeem Olajuwon, Jermaine O'Neal\nRank : 34, 13, 45, 6\nAge : 37, 33, 40, 32, 22\nNationality : United States, Nigeria, United Kindom\nPosition : Center Team, Forward Team, Forward-Center Team\nJoin_Year : 2009, 2001, 2008, 1999, 2010\nTeam : Fordham, Eau Claire High School, Bradley, Virginia Union, Houston\n*/\n \nCREATE TABLE flight (\n\tid INTEGER, \n\t\"Vehicle_Flight_number\" TEXT, \n\t\"Date\" TEXT, \n\t\"Pilot\" TEXT, \n\t\"Velocity\" REAL, \n\t\"Altitude\" REAL, \n\tairport_id INTEGER, \n\tcompany_id INTEGER, \n\tPRIMARY KEY (id), \n\tFOREIGN KEY(company_id) REFERENCES operate_company (id), \n\tFOREIGN KEY(airport_id) REFERENCES airport (id)\n)\n/*\nColumns in flight and 3 examples in each column for high cardinality columns :\nid : 1, 13, 11\nVehicle_Flight_number : M2-F1 #14, M2-F1 #61, M2-F1 #0\nDate : July 16, 1965, May 19, 1964, March 28, 1966\n*/\n/*\nColumns in flight and all categories for low cardinality columns :\nPilot : Thompson, Peterson\nVelocity : 240.0, 135.0\nAltitude : 3650.0, 0.0\nairport_id : 1, 2, 5, 8, 4, 6, 3, 9\ncompany_id : 1, 13, 11, 2, 5, 7, 4, 6, 3, 9\n*/\n \nCREATE TABLE \"Type_Of_Restaurant\" (\n\t\"ResID\" INTEGER, \n\t\"ResTypeID\" INTEGER, \n\tFOREIGN KEY(\"ResID\") REFERENCES \"Restaurant\" (\"ResID\"), \n\tFOREIGN KEY(\"ResTypeID\") REFERENCES \"Restaurant_Type\" (\"ResTypeID\")\n)\n/*\nColumns in Type_Of_Restaurant and all categories for low cardinality columns :\nResID : 1, 2\nResTypeID : 1, 2\n*/\n"
        },
        {
            "role": "user",
            "content": "List the name, born state and age of the heads of departments ordered by age."
        },
        {
            "role": "assistant",
            "content": "\nTo construct the query, I'll be working with the following tables: head.\nFrom these tables, I'll be using the following columns: name, born_state, age.\nThe SQL query I'll be generating is:\nSELECT name ,  born_state ,  age FROM head ORDER BY age"
        }
    ]
}{
    "messages": [
        {
            "role": "system",
            "content": "\nYou are an assistant that is an expert in generating sqlite SQL queries.\nHaving the access to database content, generate a correct sqlite SQL query for the given question.\n### Database content ###\n        \nCREATE TABLE people (\n\t\"People_ID\" INTEGER, \n\t\"Age\" INTEGER, \n\t\"Name\" TEXT, \n\t\"Nationality\" TEXT, \n\t\"Graduation_College\" TEXT, \n\tPRIMARY KEY (\"People_ID\")\n)\n/*\nColumns in people and all categories for low cardinality columns :\nPeople_ID : 1, 2, 5, 7, 4, 6, 3\nAge : 37, 25, 30, 34, 27, 31\nName : Tom Sheehey, Reggie Lewis, Brad Lohaus, David Butler, Tim Naegeli, Darryl Kennedy, Jerry Corcoran\nNationality : United States, United Kindom\nGraduation_College : Wisconsin\u2013Stevens Point, California, Virginia, Iowa, Northeastern, Oklahoma\n*/\n \nCREATE TABLE \"People_Addresses\" (\n\tperson_address_id INTEGER NOT NULL, \n\tperson_id INTEGER NOT NULL, \n\taddress_id INTEGER NOT NULL, \n\tdate_from DATETIME, \n\tdate_to DATETIME, \n\tPRIMARY KEY (person_address_id), \n\tFOREIGN KEY(person_id) REFERENCES \"People\" (person_id), \n\tFOREIGN KEY(address_id) REFERENCES \"Addresses\" (address_id)\n)\n/*\nColumns in People_Addresses and all categories for low cardinality columns :\nperson_address_id : 269, 276, 281, 257, 363, 396, 122, 340\nperson_id : 151, 141, 131, 171, 111, 161, 181, 121\naddress_id : 45, 9, 5, 88, 55, 92, 82, 99\ndate_from : 2013-12-26 16:57:01, 2008-07-31 02:17:25, 2012-09-26 13:21:00, 2008-05-26 20:43:41, 2014-05-10 00:32:31, 2010-11-26 05:21:12, 2017-05-01 17:32:26, 2015-05-24 16:14:12\ndate_to : 2018-03-21 09:46:30, 2018-03-08 06:16:47, 2018-02-23 22:44:18, 2018-03-11 20:26:41, 2018-03-09 02:11:12, 2018-03-09 08:45:06, 2018-03-03 16:06:17, 2018-03-12 21:10:02\n*/\n \nCREATE TABLE people (\n\t\"People_ID\" INTEGER, \n\t\"Name\" TEXT, \n\t\"Country\" TEXT, \n\t\"Is_Male\" TEXT, \n\t\"Age\" INTEGER, \n\tPRIMARY KEY (\"People_ID\")\n)\n/*\nColumns in people and 3 examples in each column for high cardinality columns :\nPeople_ID : 1, 11, 2\nName : Summer Duval, Annie Mediate, Juli Hanson\n*/\n/*\nColumns in people and all categories for low cardinality columns :\nCountry : Sweden, Canada, United States, Australia, Northern Ireland\nIs_Male : T, F\nAge : 26, 25, 36, 30, 34, 32, 27, 31\n*/\n \nCREATE TABLE farm_competition (\n\t\"Competition_ID\" INTEGER, \n\t\"Year\" INTEGER, \n\t\"Theme\" TEXT, \n\t\"Host_city_ID\" INTEGER, \n\t\"Hosts\" TEXT, \n\tPRIMARY KEY (\"Competition_ID\"), \n\tFOREIGN KEY(\"Host_city_ID\") REFERENCES city (\"City_ID\")\n)\n/*\nColumns in farm_competition and all categories for low cardinality columns :\nCompetition_ID : 1, 2, 5, 4, 6, 3\nYear : 2004, 2013, 2005, 2006, 2003, 2002\nTheme : MTV Cube, Valentine's Day, Codehunters, Carnival M is back!, Aliens, MTV Asia Aid\nHost_city_ID : 1, 2, 5, 4, 3\nHosts : Mandy Moore and Ronan Keating, Alicia Keys, Shaggy and Coco Lee, Leehom Wang and Kelly Rowland, Miley Cyrus Jared Leto and Karen Mok, Vanness Wu and Michelle Branch\n*/\n \nCREATE TABLE head (\n\t\"head_ID\" INTEGER, \n\tname TEXT, \n\tborn_state TEXT, \n\tage REAL, \n\tPRIMARY KEY (\"head_ID\")\n)\n/*\nColumns in head and all categories for low cardinality columns :\nhead_ID : 1, 2, 5, 7, 8, 4, 6, 3, 10, 9\nname : Jeff Maggert, P\u00e1draig Harrington, Billy Mayfair, K. J. Choi, Dudley Hart, Sergio Garc\u00eda, Stewart Cink, Tiger Woods, Nick Faldo, Franklin Langham\nborn_state : Delaware, Connecticut, Alabama, California, Florida\nage : 69.0, 67.0, 68.0, 53.0, 56.0, 52.0, 50.0, 43.0\n*/\n \nCREATE TABLE budget (\n\t\"School_id\" INTEGER, \n\t\"Year\" INTEGER, \n\t\"Budgeted\" INTEGER, \n\ttotal_budget_percent_budgeted REAL, \n\t\"Invested\" INTEGER, \n\ttotal_budget_percent_invested REAL, \n\t\"Budget_invested_percent\" TEXT, \n\tPRIMARY KEY (\"School_id\", \"Year\"), \n\tFOREIGN KEY(\"School_id\") REFERENCES \"School\" (\"School_id\")\n)\n/*\nColumns in budget and all categories for low cardinality columns :\nSchool_id : 1, 2, 5, 4, 3\nYear : 2004, 2001, 2005, 1999, 2000, 2006, 2002, 2003\nBudgeted : 113531, 3666, 61283, 119527, 6803, 4979, 74849\ntotal_budget_percent_budgeted : 1.3, 2.0, 2.4\nInvested : 8335, 5840, 95542, 146102, 2134, 85249, 140102\ntotal_budget_percent_invested : 2.7, 2.2, 2.0\nBudget_invested_percent : 71.3, 228.6, 146.9, 127.6, 228.8, 122.5, 42.9, 159.3\n*/\n \nCREATE TABLE \"Roles\" (\n\t\"Role_Code\" CHAR(15) NOT NULL, \n\t\"Role_Name\" VARCHAR(255), \n\t\"Role_Description\" VARCHAR(255), \n\tPRIMARY KEY (\"Role_Code\")\n)\n/*\nColumns in Roles and all categories for low cardinality columns :\nRole_Code : PR, HR, PT, MG, ED\nRole_Name : Proof Reader, Human Resource, Editor, Photo, Manager\nRole_Description : Itaque dolor ut nemo rerum vitae provident. Vel laborum ipsum velit sint. Et est omnis dignissimos., Ut sed quae eaque mollitia qui hic. Natus ea expedita et odio illum fugiat qui natus. Consequatur velit ut dolorem cum ullam esse deserunt dignissimos. Enim non non rem officiis quis., Aut modi nihil molestias temporibus sit rerum. Sit neque eaque odio omnis incidunt., Vero harum corrupti odit ipsa vero et odio. Iste et recusandae temporibus maxime. Magni aspernatur fugit quis explicabo totam esse corrupti., Et totam est quibusdam aspernatur ut. Vitae perferendis eligendi voluptatem molestiae rem ut enim. Ipsum expedita quae earum unde est. Repellendus ut ipsam nihil accusantium sit. Magni accusantium numquam quod et.\n*/\n \nCREATE TABLE \"Invoices\" (\n\tinvoice_number INTEGER, \n\tinvoice_date DATETIME, \n\tinvoice_details VARCHAR(255), \n\tPRIMARY KEY (invoice_number)\n)\n/*\nColumns in Invoices and 3 examples in each column for high cardinality columns :\ninvoice_number : 1, 13, 11\ninvoice_date : 1987-11-15 15:41:40, 1998-07-30 15:39:12, 1974-07-27 16:18:49\ninvoice_details : doloremque, eveniet, earum\n*/\n\n \nCREATE TABLE department (\n\t\"Department_ID\" INTEGER, \n\t\"Name\" TEXT, \n\t\"Creation\" TEXT, \n\t\"Ranking\" INTEGER, \n\t\"Budget_in_Billions\" REAL, \n\t\"Num_Employees\" REAL, \n\tPRIMARY KEY (\"Department_ID\")\n)\n/*\nColumns in department and 3 examples in each column for high cardinality columns :\nDepartment_ID : 1, 13, 11\nName : Energy, Interior, Health and Human Services\nCreation : 1913, 1979, 1989\nRanking : 1, 13, 11\nBudget_in_Billions : 10.7, 77.6, 59.7\nNum_Employees : 112557.0, 3000000.0, 235000.0\n*/\n\n \nCREATE TABLE club_rank (\n\t\"Rank\" REAL, \n\t\"Club_ID\" INTEGER, \n\t\"Gold\" REAL, \n\t\"Silver\" REAL, \n\t\"Bronze\" REAL, \n\t\"Total\" REAL, \n\tPRIMARY KEY (\"Rank\", \"Club_ID\"), \n\tFOREIGN KEY(\"Club_ID\") REFERENCES club (\"Club_ID\")\n)\n/*\nColumns in club_rank and all categories for low cardinality columns :\nRank : 3.0, 1.0, 2.0, 6.0, 4.0, 5.0\nClub_ID : 1, 2, 5, 4, 6, 3\nGold : 8.0, 3.0, 11.0, 7.0, 2.0, 4.0\nSilver : 3.0, 11.0, 1.0, 7.0, 2.0, 4.0\nBronze : 6.0, 9.0, 0.0, 2.0\nTotal : 3.0, 12.0, 13.0, 6.0, 21.0, 31.0\n*/\n \nCREATE TABLE \"Staff\" (\n\tstaff_id INTEGER, \n\tstaff_gender VARCHAR(1), \n\tstaff_name VARCHAR(80), \n\tPRIMARY KEY (staff_id)\n)\n/*\nColumns in Staff and 3 examples in each column for high cardinality columns :\nstaff_id : 1, 13, 11\nstaff_name : Yolanda, Tom, Melody\n*/\n/*\nColumns in Staff and all categories for low cardinality columns :\nstaff_gender : 1, 0\n*/\n \nCREATE TABLE \"Problem_Log\" (\n\tproblem_log_id INTEGER, \n\tassigned_to_staff_id INTEGER NOT NULL, \n\tproblem_id INTEGER NOT NULL, \n\tproblem_category_code VARCHAR(20) NOT NULL, \n\tproblem_status_code VARCHAR(20) NOT NULL, \n\tlog_entry_date DATETIME, \n\tlog_entry_description VARCHAR(255), \n\tlog_entry_fix VARCHAR(255), \n\tother_log_details VARCHAR(255), \n\tPRIMARY KEY (problem_log_id), \n\tFOREIGN KEY(problem_status_code) REFERENCES \"Problem_Status_Codes\" (problem_status_code), \n\tFOREIGN KEY(problem_id) REFERENCES \"Problems\" (problem_id), \n\tFOREIGN KEY(assigned_to_staff_id) REFERENCES \"Staff\" (staff_id), \n\tFOREIGN KEY(problem_category_code) REFERENCES \"Problem_Category_Codes\" (problem_category_code)\n)\n/*\nColumns in Problem_Log and 3 examples in each column for high cardinality columns :\nproblem_log_id : 1, 13, 11\nlog_entry_date : 1997-08-31 08:19:12, 1974-09-13 00:37:26, 2011-11-12 23:30:53\nlog_entry_description : t, d, b\nlog_entry_fix : t, i, s\nother_log_details : d, f, b\n*/\n/*\nColumns in Problem_Log and all categories for low cardinality columns :\nassigned_to_staff_id : 1, 13, 11, 2, 5, 8, 4, 6, 12, 10\nproblem_id : 1, 13, 11, 10, 7, 8, 4, 12, 15\nproblem_category_code : Datatabase, Middleware, GUI\nproblem_status_code : Solved, Reported\n*/\n \nCREATE TABLE \"Invoices\" (\n\tinvoice_number INTEGER, \n\torder_id INTEGER NOT NULL, \n\tinvoice_date DATETIME, \n\tPRIMARY KEY (invoice_number), \n\tFOREIGN KEY(order_id) REFERENCES \"Orders\" (order_id)\n)\n/*\nColumns in Invoices and 3 examples in each column for high cardinality columns :\ninvoice_number : 1, 13, 11\ninvoice_date : 2018-03-16 21:57:43, 2018-03-20 00:21:41, 2018-03-05 08:47:33\n*/\n/*\nColumns in Invoices and all categories for low cardinality columns :\norder_id : 13, 11, 5, 8, 4, 12, 3, 14, 10, 9\n*/\n \nCREATE TABLE \"Customer_Events\" (\n\t\"Customer_Event_ID\" INTEGER NOT NULL, \n\tcustomer_id INTEGER, \n\tdate_moved_in DATETIME, \n\tproperty_id INTEGER, \n\tresident_id INTEGER, \n\tthing_id INTEGER NOT NULL, \n\tPRIMARY KEY (\"Customer_Event_ID\"), \n\tFOREIGN KEY(thing_id) REFERENCES \"Things\" (thing_id), \n\tFOREIGN KEY(customer_id) REFERENCES \"Customers\" (customer_id), \n\tFOREIGN KEY(resident_id, property_id, date_moved_in) REFERENCES \"Residents\" (resident_id, property_id, date_moved_in)\n)\n/*\nColumns in Customer_Events and 3 examples in each column for high cardinality columns :\nCustomer_Event_ID : 428, 216, 226\nresident_id : 87, 38, 37\n*/\n/*\nColumns in Customer_Events and all categories for low cardinality columns :\ncustomer_id : 79, 91, 16, 5, 4, 63, 19, 31\ndate_moved_in : 2016-09-27 12:00:00, 2015-03-27 12:00:00\nproperty_id : 954, 120, 108, 605, 629, 748, 669, 445, 879, 107\nthing_id : 1, 46, 10, 80, 2, 92, 14, 85, 68\n*/\n \nCREATE TABLE \"Type_Of_Restaurant\" (\n\t\"ResID\" INTEGER, \n\t\"ResTypeID\" INTEGER, \n\tFOREIGN KEY(\"ResID\") REFERENCES \"Restaurant\" (\"ResID\"), \n\tFOREIGN KEY(\"ResTypeID\") REFERENCES \"Restaurant_Type\" (\"ResTypeID\")\n)\n/*\nColumns in Type_Of_Restaurant and all categories for low cardinality columns :\nResID : 1, 2\nResTypeID : 1, 2\n*/\n \nCREATE TABLE discipline_enrollments (\n\t\"Campus\" INTEGER, \n\t\"Discipline\" INTEGER, \n\t\"Year\" INTEGER, \n\t\"Undergraduate\" INTEGER, \n\t\"Graduate\" INTEGER, \n\tPRIMARY KEY (\"Campus\", \"Discipline\"), \n\tFOREIGN KEY(\"Campus\") REFERENCES \"Campuses\" (\"Id\")\n)\n/*\nColumns in discipline_enrollments and 3 examples in each column for high cardinality columns :\nCampus : 1, 13, 11\nDiscipline : 19, 17, 21\nUndergraduate : 986, 65, 815\nGraduate : 56, 377, 187\n*/\n/*\nColumns in discipline_enrollments and all categories for low cardinality columns :\nYear : 2004\n*/\n \nCREATE TABLE country (\n\t\"Country_ID\" INTEGER, \n\t\"Name\" TEXT, \n\t\"Population\" INTEGER, \n\t\"Area\" INTEGER, \n\t\"Languages\" TEXT, \n\tPRIMARY KEY (\"Country_ID\")\n)\n/*\nColumns in country and all categories for low cardinality columns :\nCountry_ID : 1, 2, 3\nName : Austria, Sweden, Finland\nPopulation : 8206524, 9047752, 5261008\nArea : 83871, 338145, 449964\nLanguages : Swedish, Finnish Swedish, German\n*/\n \nCREATE TABLE management (\n\t\"department_ID\" INTEGER, \n\t\"head_ID\" INTEGER, \n\ttemporary_acting TEXT, \n\tPRIMARY KEY (\"department_ID\", \"head_ID\"), \n\tFOREIGN KEY(\"head_ID\") REFERENCES head (\"head_ID\"), \n\tFOREIGN KEY(\"department_ID\") REFERENCES department (\"Department_ID\")\n)\n/*\nColumns in management and all categories for low cardinality columns :\ndepartment_ID : 7, 15, 2, 11\nhead_ID : 5, 4, 6, 3, 10\ntemporary_acting : Yes, No\n*/\n"
        },
        {
            "role": "user",
            "content": "List the creation year, name and budget of each department."
        },
        {
            "role": "assistant",
            "content": "\nTo construct the query, I'll be working with the following tables: department.\nFrom these tables, I'll be using the following columns: creation, name, budget_in_billions.\nThe SQL query I'll be generating is:\nSELECT creation ,  name ,  budget_in_billions FROM department"
        }
    ]
}{
    "messages": [
        {
            "role": "system",
            "content": "\nYou are an assistant that is an expert in generating sqlite SQL queries.\nHaving the access to database content, generate a correct sqlite SQL query for the given question.\n### Database content ###\n        \nCREATE TABLE list (\n\t\"LastName\" TEXT, \n\t\"FirstName\" TEXT, \n\t\"Grade\" INTEGER, \n\t\"Classroom\" INTEGER, \n\tPRIMARY KEY (\"LastName\", \"FirstName\")\n)\n/*\nColumns in list and 3 examples in each column for high cardinality columns :\nLastName : HOUTCHENS, GELL, FLACHS\nFirstName :  RAY,  EMILE,  PATRINA\nClassroom : 109, 110, 106\n*/\n/*\nColumns in list and all categories for low cardinality columns :\nGrade : 1, 2, 5, 4, 6, 3, 0\n*/\n \nCREATE TABLE \"School\" (\n\t\"School_id\" TEXT, \n\t\"School_name\" TEXT, \n\t\"Location\" TEXT, \n\t\"Mascot\" TEXT, \n\t\"Enrollment\" INTEGER, \n\t\"IHSAA_Class\" TEXT, \n\t\"IHSAA_Football_Class\" TEXT, \n\t\"County\" TEXT, \n\tPRIMARY KEY (\"School_id\")\n)\n/*\nColumns in School and all categories for low cardinality columns :\nSchool_id : 1, 2, 5, 7, 8, 4, 6, 3\nSchool_name : New Prairie 1, Triton, LaVille, Glenn, Culver Community, Jimtown, Knox Community, Bremen\nLocation : Bourbon, Walkerton, Lakeville, Knox, Culver, New Carlisle, Elkhart, Bremen\nMascot : Lancers, Cougars, Cavaliers, Trojans, Redskins, Falcons, Lions, Jimmies\nEnrollment : 601, 605, 287, 495, 620, 379, 852, 316\nIHSAA_Class : AA, A, AAA\nIHSAA_Football_Class : AA, A, AAA, AAAA\nCounty : 20 Elkhart, 50 Marshall, 75 Starke, 71 St. Joseph, 46 LaPorte 71 St. Joseph\n*/\n \nCREATE TABLE chip_model (\n\t\"Model_name\" TEXT, \n\t\"Launch_year\" REAL, \n\t\"RAM_MiB\" REAL, \n\t\"ROM_MiB\" REAL, \n\t\"Slots\" TEXT, \n\t\"WiFi\" TEXT, \n\t\"Bluetooth\" TEXT, \n\tPRIMARY KEY (\"Model_name\")\n)\n/*\nColumns in chip_model and 3 examples in each column for high cardinality columns :\nModel_name : X30 mid-range, X50 Advanced, X51 mid-range\n*/\n/*\nColumns in chip_model and all categories for low cardinality columns :\nLaunch_year : 2002.0, 2005.0, 2004.0, 2003.0\nRAM_MiB : 32.0, 64.0\nROM_MiB : 48.0, 256.0, 128.0, 32.0, 64.0\nSlots : 1CFII,1SD, 1SD\nWiFi : 802.11b, No\nBluetooth : 1.2, Yes, No, 1.1\n*/\n \nCREATE TABLE employment (\n\t\"Company_ID\" INTEGER, \n\t\"People_ID\" INTEGER, \n\t\"Year_working\" INTEGER, \n\tPRIMARY KEY (\"Company_ID\", \"People_ID\"), \n\tFOREIGN KEY(\"People_ID\") REFERENCES people (\"People_ID\"), \n\tFOREIGN KEY(\"Company_ID\") REFERENCES company (\"Company_ID\")\n)\n/*\nColumns in employment and all categories for low cardinality columns :\nCompany_ID : 13, 11, 7, 17, 15\nPeople_ID : 1, 2, 7, 4, 3\nYear_working : 1, 2, 4, 3\n*/\n \nCREATE TABLE \"Papers\" (\n\t\"paperID\" INTEGER, \n\ttitle TEXT, \n\tPRIMARY KEY (\"paperID\")\n)\n/*\nColumns in Papers and all categories for low cardinality columns :\npaperID : 201, 204, 205, 200, 206, 203, 202\ntitle : Nameless, Painless, Binders Unbound, Proving the Unique Fixed-Point Principle Correct: An Adventure with Category Theory, An Equivalence-Preserving CPS Translation via Multi-Language Semantics, Making Standard ML a Practical Database Programming Language, Functional Pearl: Modular Rollback through Control Logging, Just do it: Simple Monadic Equational Reasoning\n*/\n \nCREATE TABLE \"Attribute_Definitions\" (\n\tattribute_id INTEGER, \n\tattribute_name VARCHAR(30), \n\tattribute_data_type VARCHAR(10), \n\tPRIMARY KEY (attribute_id)\n)\n/*\nColumns in Attribute_Definitions and all categories for low cardinality columns :\nattribute_id : 1, 2, 4, 3\nattribute_name : Yellow, Sweet, Green, Black\nattribute_data_type : Bool\n*/\n \nCREATE TABLE player (\n\t\"Player_ID\" INTEGER, \n\t\"Player\" TEXT, \n\t\"Years_Played\" TEXT, \n\t\"Total_WL\" TEXT, \n\t\"Singles_WL\" TEXT, \n\t\"Doubles_WL\" TEXT, \n\t\"Team\" INTEGER, \n\tPRIMARY KEY (\"Player_ID\"), \n\tFOREIGN KEY(\"Team\") REFERENCES team (\"Team_id\")\n)\n/*\nColumns in player and all categories for low cardinality columns :\nPlayer_ID : 1, 2, 5, 7, 8, 4, 6, 3, 10, 9\nPlayer : Seol Jae-Min (none), An Jae-Sung, Kim Young-Jun (474), Cho Soong-Jae (630), Jeong Suk-Young (793), Lim Yong-Kyu (288), Im Kyu-tae (492), Bae Nam-Ju, Kim Hyun-Joon (908), Chung Hong (717)\nYears_Played : 8 (2003\u20132005, 2007\u20132011), 2 (1988, 1990), 3 (2005, 2007\u20132008), 1 (2011), 2 (2010\u20132011), 2 (2010-2011), 3 (2009\u20132011), 4 (2003\u20132004, 2010\u20132011)\nTotal_WL : 1\u20133, 2\u20132, 0\u20130, 6\u20139, 2\u20130, 3\u20134, 4\u20133, 6\u20134, 7\u20136, 1\u20132\nSingles_WL : 6\u20133, 5\u20136, 0\u20130, 1\u20130, 2\u20131, 0\u20132, 5\u20137, 3\u20132, 1\u20132\nDoubles_WL : 1\u20133, 2\u20132, 0\u20130, 1\u20130, 1\u20131, 2\u20130, 0\u20131, 1\u20132\nTeam : 1, 2, 8, 4, 6\n*/\n \nCREATE TABLE \"Claims_Processing_Stages\" (\n\t\"Claim_Stage_ID\" INTEGER NOT NULL, \n\t\"Next_Claim_Stage_ID\" INTEGER, \n\t\"Claim_Status_Name\" VARCHAR(255) NOT NULL, \n\t\"Claim_Status_Description\" VARCHAR(255) NOT NULL, \n\tPRIMARY KEY (\"Claim_Stage_ID\")\n)\n/*\nColumns in Claims_Processing_Stages and all categories for low cardinality columns :\nClaim_Stage_ID : 1, 3\nNext_Claim_Stage_ID : 1\nClaim_Status_Name : Open, Close\nClaim_Status_Description : Open a new claim, Close a claim\n*/\n \nCREATE TABLE region (\n\t\"Region_id\" INTEGER, \n\t\"Region_code\" TEXT, \n\t\"Region_name\" TEXT, \n\tPRIMARY KEY (\"Region_id\")\n)\n/*\nColumns in region and 3 examples in each column for high cardinality columns :\nRegion_id : 1, 13, 11\nRegion_code : AG, AI, AQ\nRegion_name : Angola, Cyprus, Denmark\n*/\n\n \nCREATE TABLE school (\n\t\"School_ID\" INTEGER, \n\t\"School\" TEXT, \n\t\"Location\" TEXT, \n\t\"Enrollment\" REAL, \n\t\"Founded\" REAL, \n\t\"Denomination\" TEXT, \n\t\"Boys_or_Girls\" TEXT, \n\t\"Day_or_Boarding\" TEXT, \n\t\"Year_Entered_Competition\" REAL, \n\t\"School_Colors\" TEXT, \n\tPRIMARY KEY (\"School_ID\")\n)\n/*\nColumns in school and all categories for low cardinality columns :\nSchool_ID : 1, 2, 5, 4, 6, 3\nSchool : St Aloysius' College, Cranbrook School, Waverley College, Knox Grammar School, Barker College, Trinity Grammar School\nLocation : Hornsby, Summer Hill, Waverley, Bellevue Hill, Milsons Point, Wahroonga\nEnrollment : 1000.0, 1850.0, 2200.0, 1200.0, 2300.0, 1430.0\nFounded : 1918.0, 1924.0, 1913.0, 1879.0, 1903.0, 1890.0\nDenomination : Catholic, Uniting Church, Anglican\nBoys_or_Girls : Boys only to Yr 9 Co-ed Year 10 to 12, Boys\nDay_or_Boarding : Day, Day & Boarding\nYear_Entered_Competition : 1944.0, 1929.0\nSchool_Colors : Royal Blue and Gold, Black & Blue, Red, White & Blue, Red & Blue, Green and White\n*/\n \nCREATE TABLE broadcast_share (\n\t\"Channel_ID\" INTEGER, \n\t\"Program_ID\" INTEGER, \n\t\"Date\" TEXT, \n\t\"Share_in_percent\" REAL, \n\tPRIMARY KEY (\"Channel_ID\", \"Program_ID\"), \n\tFOREIGN KEY(\"Program_ID\") REFERENCES program (\"Program_ID\"), \n\tFOREIGN KEY(\"Channel_ID\") REFERENCES channel (\"Channel_ID\")\n)\n/*\nColumns in broadcast_share and all categories for low cardinality columns :\nChannel_ID : 1, 2, 5, 7, 8, 4, 6, 3, 9\nProgram_ID : 1, 2, 4, 3\nDate : 03,May, 04,April, 02,May, 10,Jun, 11,May, 01,May, 13,May\nShare_in_percent : 2.1, 1.9, 3.0, 1.1, 3.2, 4.2, 1.8, 3.1, 2.8\n*/\n \nCREATE TABLE people (\n\t\"People_ID\" INTEGER, \n\t\"Name\" TEXT, \n\t\"Height\" REAL, \n\t\"Weight\" REAL, \n\t\"Home Town\" TEXT, \n\tPRIMARY KEY (\"People_ID\")\n)\n/*\nColumns in people and 3 examples in each column for high cardinality columns :\nPeople_ID : 1, 11, 2\nName : Gary Goodner, Mike Murphy, Tyrone Brayan\n*/\n/*\nColumns in people and all categories for low cardinality columns :\nHeight : 6.6, 6.5, 6.7, 6.1, 6.4, 6.3, 6.8\nWeight : 215.0, 185.0, 170.0, 200.0, 220.0, 205.0, 160.0, 190.0\nHome Town : Beaver Dam, KY, San Antonio, TX, Placentia, CA, Indianapolis, IN, Westport, CT, Denton, TX, Austin, TX, Baton Rouge, LA, Altoona, PA, Los Angeles, CA\n*/\n \nCREATE TABLE \"Individuals\" (\n\tindividual_id INTEGER, \n\tindividual_first_name VARCHAR(80), \n\tindividual_middle_name VARCHAR(80), \n\tinidividual_phone VARCHAR(80), \n\tindividual_email VARCHAR(80), \n\tindividual_address VARCHAR(255), \n\tindividual_last_name VARCHAR(80), \n\tPRIMARY KEY (individual_id)\n)\n/*\nColumns in Individuals and 3 examples in each column for high cardinality columns :\nindividual_id : 1, 13, 11\nindividual_first_name : Daniella, Guy, Allene\nindividual_middle_name : Hosea, Tommie, Colleen\ninidividual_phone : (121)788-2928, 1-727-057-0382x999, 1-818-062-2837\nindividual_email : zlehner@example.net, hickle.ewell@example.com, mbahringer@example.com\nindividual_address : 69578 Baylee Prairie, 104 Bernier Loop, 640 Johns Branch\nindividual_last_name : Rau, Hand, Maggio\n*/\n\n \nCREATE TABLE management (\n\t\"department_ID\" INTEGER, \n\t\"head_ID\" INTEGER, \n\ttemporary_acting TEXT, \n\tPRIMARY KEY (\"department_ID\", \"head_ID\"), \n\tFOREIGN KEY(\"head_ID\") REFERENCES head (\"head_ID\"), \n\tFOREIGN KEY(\"department_ID\") REFERENCES department (\"Department_ID\")\n)\n/*\nColumns in management and all categories for low cardinality columns :\ndepartment_ID : 7, 15, 2, 11\nhead_ID : 5, 4, 6, 3, 10\ntemporary_acting : Yes, No\n*/\n \nCREATE TABLE cinema (\n\t\"Cinema_ID\" INTEGER, \n\t\"Name\" TEXT, \n\t\"Openning_year\" INTEGER, \n\t\"Capacity\" INTEGER, \n\t\"Location\" TEXT, \n\tPRIMARY KEY (\"Cinema_ID\")\n)\n/*\nColumns in cinema and all categories for low cardinality columns :\nCinema_ID : 1, 2, 5, 7, 8, 4, 6, 3, 10, 9\nName : Glenmore, Oriel, Codling, Dublin Array, Glenough, Grouse Lodge, Carrowleagh, Gortahile, Mount Callan, Moneypoint\nOpenning_year : 2009, 2013, 2015, 2012, 2011, 2010\nCapacity : 330, 305, 368, 364, 325, 203, 908, 208, 1100, 225\nLocation : County Cork, County Louth, County Laois, County Tipperary, County Clare, County Dublin, County Wicklow\n*/\n \nCREATE TABLE head (\n\t\"head_ID\" INTEGER, \n\tname TEXT, \n\tborn_state TEXT, \n\tage REAL, \n\tPRIMARY KEY (\"head_ID\")\n)\n/*\nColumns in head and all categories for low cardinality columns :\nhead_ID : 1, 2, 5, 7, 8, 4, 6, 3, 10, 9\nname : Jeff Maggert, P\u00e1draig Harrington, Billy Mayfair, K. J. Choi, Dudley Hart, Sergio Garc\u00eda, Stewart Cink, Tiger Woods, Nick Faldo, Franklin Langham\nborn_state : Delaware, Connecticut, Alabama, California, Florida\nage : 69.0, 67.0, 68.0, 53.0, 56.0, 52.0, 50.0, 43.0\n*/\n \nCREATE TABLE department (\n\t\"Department_ID\" INTEGER, \n\t\"Name\" TEXT, \n\t\"Creation\" TEXT, \n\t\"Ranking\" INTEGER, \n\t\"Budget_in_Billions\" REAL, \n\t\"Num_Employees\" REAL, \n\tPRIMARY KEY (\"Department_ID\")\n)\n/*\nColumns in department and 3 examples in each column for high cardinality columns :\nDepartment_ID : 1, 13, 11\nName : Energy, Interior, Health and Human Services\nCreation : 1913, 1979, 1989\nRanking : 1, 13, 11\nBudget_in_Billions : 10.7, 77.6, 59.7\nNum_Employees : 112557.0, 3000000.0, 235000.0\n*/\n\n \nCREATE TABLE \"Timed_Locations_of_Things\" (\n\tthing_id INTEGER NOT NULL, \n\t\"Date_and_Time\" DATETIME NOT NULL, \n\t\"Location_Code\" CHAR(15) NOT NULL, \n\tPRIMARY KEY (thing_id, \"Date_and_Time\", \"Location_Code\"), \n\tFOREIGN KEY(thing_id) REFERENCES \"Things\" (thing_id)\n)\n/*\nColumns in Timed_Locations_of_Things and 3 examples in each column for high cardinality columns :\nDate_and_Time : 2017-03-19 13:57:49, 2017-08-31 13:54:13, 2016-12-29 00:39:19\nLocation_Code : 2677 Runolfsson, 288 Lang Ferry, 94425 Nellie Kn\n*/\n/*\nColumns in Timed_Locations_of_Things and all categories for low cardinality columns :\nthing_id : 26, 45, 2, 68, 58, 92, 14, 85, 10\n*/\n \nCREATE TABLE \"Projects\" (\n\t\"Code\" CHAR(4), \n\t\"Name\" CHAR(50) NOT NULL, \n\t\"Hours\" INTEGER, \n\tPRIMARY KEY (\"Code\")\n)\n/*\nColumns in Projects and 3 examples in each column for high cardinality columns :\nCode : Bte2, AeH6, Ast3\nName : Aerodynamics of Air Hockey, Winds: Studying Bernoullis Principle, Aerodynamics and Gas Mileage\nHours : 321, 189, 89\n*/\n\n"
        },
        {
            "role": "user",
            "content": "What are the maximum and minimum budget of the departments?"
        },
        {
            "role": "assistant",
            "content": "\nTo construct the query, I'll be working with the following tables: department.\nFrom these tables, I'll be using the following columns: budget_in_billions.\nThe SQL query I'll be generating is:\nSELECT max(budget_in_billions) ,  min(budget_in_billions) FROM department"
        }
    ]
}